@* Ui层项目 - 视图模型文件 *@
@using Util.Generators.Helpers
@model Util.Generators.Contexts.EntityContext
@{
    var service = new GenerateService( Model );
    var entity = service.EntityName;
}
import { Component, Injector } from '@@angular/core';
import { environment } from "@@env/environment";
import { TableQueryComponentBase } from "util-angular";
import { @(entity)Query } from './model/@service.GetClientEntityName()-query';
import { @(entity)ViewModel } from './model/@service.GetClientEntityName()-view-model';
import { @(entity)EditComponent } from './@service.GetClientEntityName()-edit.component';
import { @(entity)DetailComponent } from './@service.GetClientEntityName()-detail.component';

/**
 * 模块列表页
 */
@@Component( {
    selector: '@service.GetClientEntityName()-list',
    templateUrl: environment.production ? './html/index.component.html' : '/view/routes/@service.ClientAppName/@service.GetClientEntityName()',
})
export class @(entity)ListComponent extends TreeTableQueryComponentBase<@(entity)ViewModel,@(entity)Query>
{

    /**
     * 初始化模块列表页
     * @@param injector 注入器
     */
    constructor(injector: Injector) {
        super(injector);
    }

    /**
     * 创建查询参数
     */
    protected createQuery() {
        let result = new @(entity)Query();
        return result;
    }

    /**
     * 获取创建弹出层组件
     */
    getCreateDialogComponent() {
        return @(entity)EditComponent;
    }

    /**
     * 获取创建弹出层数据
     */
    protected getCreateDialogData(data?) {
        return {
            parent: data
        }
    }

    /**
     * 获取更新弹出框数据
     */
    protected getEditDialogData(data) {
        if (!data)
            return null;
        return {
            id: data.id,
            data: data
        };
    }

    /**
     * 获取详情弹出框组件
     */
    getDetailDialogComponent() {
        return @(entity)DetailComponent;
    }
}